{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"pixi.js\"","webpack:///external \"spark-md5\"","webpack:///./src/loader.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","pixi","js","spark","md5","ResLoader","constructor","env","cloudPath","entryFileName","wx","cloud","init","this","localPath","USER_DATA_PATH","fs","getFileSystemManager","resources","[object Object]","filePath","localFile","cloudFile","needDownload","accessSync","error","SparkMD5","ArrayBuffer","append","readFileSync","end","unlinkSync","dirs","split","slice","dir","mkdirSync","downloadFile","fileID","then","res","saveFileSync","tempFilePath","catch","console","sync","onSyncComplete","onComplete","success","saveFile","readFile","savedFilePath","encoding","async","assetList","JSON","parse","data","progress","total","length","fileItem","_syncLocalFile","filename","onSyncProgress","fail","addTexture","id","image","push","trim","file","type","RES_TYPE_TEXTURE","addSpriteSheet","json","RES_TYPE_SPRITE_SHEET","addFont","font","RES_TYPE_FONT","_getFilePath","onLoadError","imagePath","Promise","resolve","img","createImage","src","onload","PIXI","texture","_loadBaseTexture","addToCache","jsonFile","onLoadComplete","resource","loadTexture","url","loadSpritesheet","loadFont","onLoadProgress"],"mappings":"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","file":"weapp-pixi-loader.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = pixi.js;","module.exports = spark-md5;","import * as PIXI from \"pixi.js\";\nimport SparkMD5 from \"spark-md5\";\n\nexport default class ResLoader {\n  static RES_TYPE_TEXTURE = 0;\n  static RES_TYPE_SPRITE_SHEET = 1;\n  static RES_TYPE_FONT = 2;\n\n  constructor(env, cloudPath, entryFileName) {\n    wx.cloud.init({\n      env: env\n    });\n\n    this.cloudPath = cloudPath;\n    this.localPath = wx.env.USER_DATA_PATH;\n    this.entryFileName = entryFileName;\n    this.fs = wx.getFileSystemManager();\n\n    this.resources = [];\n  }\n\n  async _syncLocalFile(filePath, md5) {\n    const localFile = this.localPath + '/' + filePath;\n    const cloudFile = this.cloudPath + '/' + filePath;\n    let needDownload = false;\n\n    try {\n      this.fs.accessSync(localFile);\n    } catch (error) {\n      needDownload = true;\n    }\n\n    // check file md5\n\n    if (!needDownload) {\n      if (new SparkMD5.ArrayBuffer().append(this.fs.readFileSync(localFile)).end(false) === md5) {\n        needDownload = false;\n      } else {\n        this.fs.unlinkSync(localFile);\n        needDownload = true;\n      }\n    }\n\n    // download file if needed\n\n    if (needDownload) {\n      const dirs = filePath.split('/').slice(0, -1);\n      let dir = this.localPath + '/';\n\n      for (const d of dirs) {\n        dir += '/' + d;\n        try {\n          this.fs.accessSync(dir);\n        } catch (error) {\n          this.fs.mkdirSync(dir);\n        }\n      }\n\n      await wx.cloud.downloadFile({\n        fileID: cloudFile\n      }).then((res) => {\n        this.fs.saveFileSync(res.tempFilePath, localFile);\n      }).catch(console.error);\n    }\n  }\n\n  sync(onSyncComplete) {\n    if (typeof onComplete === 'function') {\n      this.onSyncComplete = onSyncComplete;\n    }\n\n    wx.cloud.downloadFile({\n      fileID: this.cloudPath + '/' + this.entryFileName,\n      success: (res) => {\n        this.fs.saveFile({\n          tempFilePath: res.tempFilePath,\n          filePath: this.localPath + '/' + this.entryFileName,\n          success: (res) => {\n            this.fs.readFile({\n              filePath: res.savedFilePath,\n              encoding: 'utf-8',\n              success: async (res) => {\n                this.assetList = JSON.parse(res.data);\n                let progress = 0;\n                const total = this.assetList.length;\n\n                for (const fileItem of this.assetList) {\n                  await this._syncLocalFile(fileItem.filename, fileItem.md5);\n                  if (typeof this.onSyncProgress === 'function') {\n                    this.onSyncProgress(fileItem.filename, ++progress / total);\n                  }\n                }\n\n                if (typeof this.onSyncComplete === 'function') {\n                  this.onSyncComplete();\n                }\n              },\n              fail: console.error\n            });\n          },\n          fail: console.error\n        });\n      },\n      fail: console.error\n    });\n  }\n\n  addTexture(id, image) {\n    this.resources.push({\n      id: id.trim().length > 0 ? id.trim() : image.trim(),\n      file: image.trim(),\n      type: ResLoader.RES_TYPE_TEXTURE\n    });\n\n    return this;\n  }\n\n  addSpriteSheet(json, image) {\n    this.resources.push({\n      id: json,\n      file: image.trim(),\n      type: ResLoader.RES_TYPE_SPRITE_SHEET\n    });\n\n    return this;\n  }\n\n  addFont(font, image) {\n    this.resources.push({\n      id: font,\n      file: image.trim(),\n      type: ResLoader.RES_TYPE_FONT\n    });\n\n    return this;\n  }\n\n  _getFilePath(file) {\n    let filePath = file;\n\n    try {\n      this.fs.accessSync(filePath);\n    } catch (error) {\n      filePath = this.localPath + '/' + file;\n    }\n\n    try {\n      this.fs.accessSync(filePath);\n    } catch (error) {\n      if (typeof this.onLoadError === 'function') {\n        this.onLoadError(file, 'resource file does not found');\n      }\n\n      return false;\n    }\n\n    return filePath;\n  }\n\n  async _loadBaseTexture(image) {\n    const imagePath = this._getFilePath(image);\n\n    if (imagePath) {\n      return new Promise((resolve) => {\n        const img = wx.createImage();\n\n        img.src = imagePath;\n        img.onload = () => resolve(new PIXI.BaseTexture(img));\n      });\n    }\n\n    return false;\n  }\n\n  async loadTexture(id, image) {\n    const texture = await this._loadBaseTexture(image);\n\n    if (texture) {\n      new PIXI.Texture().addToCache(texture, id);\n      return true;\n    }\n\n    return false;\n  }\n\n  async loadSpritesheet(json, image) {\n    const jsonFile = this._getFilePath(json);\n    const texture = this._loadBaseTexture(image);\n\n    if (jsonFile && texture) {\n      return await new Promise((resolve) => {\n        new PIXI.Spritesheet(\n          texture,\n          JSON.parse(this.fs.readFileSync(jsonFile, 'utf-8'))\n        ).parse(resolve);\n      });\n    }\n\n    return false;\n  }\n\n  // aysnc loadFont(font, url) {\n\n  // }\n\n  async load(onLoadComplete) {\n    if (typeof onLoadComplete === 'function') {\n      this.onLoadComplete = onLoadComplete;\n    }\n\n    const total = this.resources.length;\n    let progress = 0;\n\n    for (let i = 0; i < this.resources.length; i++) {\n      const resource = this.resources[i];\n\n      if (resource.type === ResLoader.RES_TYPE_TEXTURE) {\n        await this.loadTexture(resource.id, resource.url);\n      } else if (resource.type === ResLoader.RES_TYPE_SPRITE_SHEET) {\n        await this.loadSpritesheet(resource.id, resource.url);\n      } else if (resource.type === ResLoader.RES_TYPE_FONT) {\n        await this.loadFont(resource.id, resource.url);\n      }\n\n      if (typeof this.onLoadProgress === 'function') {\n        this.onLoadProgress(resource, ++progress / total);\n      }\n    }\n\n    if (typeof this.onLoadComplete === 'function') {\n      this.onLoadComplete();\n    }\n  }\n}\n","import ResLoader from './loader';\n\nexport default ResLoader;\n"],"sourceRoot":""}